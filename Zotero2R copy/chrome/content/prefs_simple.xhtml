<?xml version="1.0"?>
<vbox xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      xmlns:html="http://www.w3.org/1999/xhtml">
  
  <!-- 内嵌CSS样式 -->
  <html:style><![CDATA[
    .settings-section {
      margin: 15px 0;
      padding: 15px;
      border: 1px solid #ccc;
      border-radius: 4px;
      background: #f9f9f9;
    }
    
    .settings-section h3 {
      margin: 0 0 15px 0;
      font-size: 16px;
      font-weight: bold;
    }
    
    .form-row {
      margin-bottom: 10px;
      display: flex;
      align-items: center;
    }
    
    .form-row label {
      min-width: 140px;
      margin-right: 10px;
    }
    
    .form-row input {
      flex-grow: 1;
      padding: 5px;
      border: 1px solid #ccc;
      border-radius: 3px;
    }
    
    .form-row button {
      margin-left: 10px;
      padding: 5px 10px;
      background: #0066cc;
      color: white;
      border: none;
      border-radius: 3px;
      cursor: pointer;
    }
    
    .status {
      margin: 10px 0;
      padding: 10px;
      text-align: center;
      border-radius: 4px;
      display: none;
    }
    
    .status.success { background: #d4edda; color: #155724; display: block; }
    .status.error { background: #f8d7da; color: #721c24; display: block; }
  ]]></html:style>
  
  <!-- 内嵌JavaScript避免路径问题 -->
  <script type="application/javascript"><![CDATA[
    function initPrefs() {
      try {
        console.log('Zotero2Readwise: 初始化设置面板');
        
        // 等待Zotero就绪
        if (!window.Zotero || !window.Zotero.Zotero2Readwise) {
          setTimeout(initPrefs, 100);
          return;
        }
        
        loadSettings();
        bindEvents();
        
        console.log('Zotero2Readwise: 设置面板初始化完成');
      } catch (error) {
        console.error('Zotero2Readwise: 设置面板初始化失败', error);
      }
    }
    
    function loadSettings() {
      const getPref = (key) => {
        try {
          return Zotero.Prefs.get(`extensions.zotero2readwise.${key}`, true);
        } catch (e) {
          return '';
        }
      };
      
      // 加载API设置
      const readwiseToken = getPref('readwiseToken') || '';
      const zoteroKey = getPref('zoteroKey') || '';
      const zoteroLibraryId = getPref('zoteroLibraryId') || '';
      
      document.getElementById('readwise-token').value = readwiseToken;
      document.getElementById('zotero-key').value = zoteroKey;
      document.getElementById('library-id').value = zoteroLibraryId;
    }
    
    function bindEvents() {
      // 保存设置
      document.getElementById('save-settings').addEventListener('click', saveSettings);
      
      // 测试连接
      document.getElementById('test-connection').addEventListener('click', testConnection);
    }
    
    function saveSettings() {
      try {
        const readwiseToken = document.getElementById('readwise-token').value;
        const zoteroKey = document.getElementById('zotero-key').value;
        const zoteroLibraryId = document.getElementById('library-id').value;
        
        Zotero.Prefs.set('extensions.zotero2readwise.readwiseToken', readwiseToken, true);
        Zotero.Prefs.set('extensions.zotero2readwise.zoteroKey', zoteroKey, true);
        Zotero.Prefs.set('extensions.zotero2readwise.zoteroLibraryId', zoteroLibraryId, true);
        
        showStatus('设置已保存', 'success');
      } catch (error) {
        showStatus('保存失败: ' + error.message, 'error');
      }
    }
    
    function testConnection() {
      showStatus('正在测试连接...', 'info');
      // 这里可以添加实际的连接测试逻辑
      setTimeout(() => {
        showStatus('连接测试功能待实现', 'success');
      }, 1000);
    }
    
    function showStatus(message, type) {
      const statusDiv = document.getElementById('status');
      statusDiv.textContent = message;
      statusDiv.className = `status ${type}`;
      
      setTimeout(() => {
        statusDiv.style.display = 'none';
      }, 3000);
    }
    
    // 当DOM加载完成后初始化
    document.addEventListener('DOMContentLoaded', initPrefs);
    
    // 如果已经加载完成，直接初始化
    if (document.readyState === 'complete') {
      setTimeout(initPrefs, 100);
    }
  ]]></script>
  
  <vbox id="zotero2readwise-simple-prefs" flex="1">
    <html:div class="settings-section">
      <html:h3>API 配置</html:h3>
      
      <html:div class="form-row">
        <html:label>Readwise Token:</html:label>
        <html:input type="password" id="readwise-token" placeholder="输入Readwise Access Token"/>
      </html:div>
      
      <html:div class="form-row">
        <html:label>Zotero API Key:</html:label>
        <html:input type="password" id="zotero-key" placeholder="输入Zotero API Key"/>
      </html:div>
      
      <html:div class="form-row">
        <html:label>Zotero Library ID:</html:label>
        <html:input type="text" id="library-id" placeholder="输入Library ID"/>
      </html:div>
      
      <html:div style="text-align: center; margin-top: 15px;">
        <html:button id="save-settings">保存设置</html:button>
        <html:button id="test-connection">测试连接</html:button>
      </html:div>
    </html:div>
    
    <html:div id="status" class="status"></html:div>
  </vbox>
</vbox>
